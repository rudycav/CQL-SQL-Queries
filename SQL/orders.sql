--Calculate the order total for each order
SELECT ORDER_T.ORDER_ID, SUM(ORDERED_QUANTITY * STANDARD_PRICE)
FROM ORDER_T 
JOIN ORDER_LINE_T ON ORDER_T.ORDER_ID = ORDER_LINE_T.ORDER_ID
JOIN PRODUCT_T ON PRODUCT_T.PRODUCT_ID = ORDER_LINE_T.PRODUCT_ID
GROUP BY ORDER_T.ORDER_ID;


--Find the order which has the largest amount
SELECT MAX(ORDERED_QUANTITY * STANDARD_PRICE)
FROM ORDER_T 
JOIN ORDER_LINE_T ON ORDER_T.ORDER_ID = ORDER_LINE_T.ORDER_ID 
JOIN PRODUCT_T ON PRODUCT_T.PRODUCT_ID = ORDER_LINE_T.PRODUCT_ID;


--What is the number of salesperson in SouthWest?
SELECT COUNT(SALESPERSON_ID)
FROM SALESPERSON_T 
JOIN TERRITORY_T ON
(Territory_T.Territory_id = Salesperson_T.Salesperson_Id)
WHERE Territory_Name = 'Southwest';


--What is the number of employees who work in Main Saw Mill?
SELECT COUNT(EMPLOYEE_T.EMPLOYEE_ID)
FROM EOMPLOYEE_T 
JOIN WORKS_IN_T ON WORKS_IN_T.EMPLOYEE_ID = EMPLOYEE_T.EMPLOYEE_ID
JOIN WORK_CENTER_T ON WORKS_IN_T.WORK_CENTER_ID = WORK_CENTER_T.WORK_CENTER_ID
WHERE WORK_CENTER_LOCATION = 'MAIN SAW MILL';


--How many orders did each customer placed?
SELECT CUSTOMER_T.CUSTOMER_ID, SUM(ORDERED_QUANTITY)
FROM CUSTOMER_T 
JOIN ORDER_T ON CUSTOMER_T.CUSTOMER_ID = ORDER_T.CUSTOMER_ID
JOIN ORDER_LINE_T ON ORDER_T.ORDER_ID = ORDER_LINE_T.ORDER_ID
GROUP BYCUSTOMER_T.CUSTOMER_ID;


--What are the names of customers who has not placed any order?
SELECT CUSTOMER_NAME
FROM CUSTOMER_T
WHERE CUSTOMER_NAME NOT IN (SELECT CUSTOMER_T.CUSTOMER_NAME
			    FROM CUSTOMER_T
                            JOIN ORDER_T ON
                            CUSTOMER_T.CUSTOMER_ID = ORDER_T.CUSTOMER_ID
                            JOIN ORDER_LINE_T ON
                            ORDER_T.ORDER_ID = ORDER_LINE_T.ORDER_ID);
